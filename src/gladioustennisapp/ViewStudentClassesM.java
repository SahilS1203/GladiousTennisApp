/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gladioustennisapp;

import com.mydia.cs.Utility;
import java.awt.Color;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author salga
 */
public class ViewStudentClassesM extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public ViewStudentClassesM() {
        initComponents();
        getContentPane().setBackground(new Color(220,20,60));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        classesBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        coachTxtField = new javax.swing.JTextField();
        coachNameRdBtn = new javax.swing.JRadioButton();
        stuTxtField = new javax.swing.JTextField();
        stuNameRdBtn = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        dateRdBtn = new javax.swing.JRadioButton();
        exportBtn = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(220, 20, 60));
        setForeground(java.awt.Color.red);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gladioustennisapp/Webp.net-resizeimage (1).png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student Classes Data ");

        searchBtn.setBackground(new java.awt.Color(0, 0, 0));
        searchBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        classesBtn.setBackground(new java.awt.Color(0, 0, 0));
        classesBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        classesBtn.setForeground(new java.awt.Color(255, 255, 255));
        classesBtn.setText("Show all Classes");
        classesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classesBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search");

        coachTxtField.setText("Enter Coach Name...");
        coachTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachTxtFieldActionPerformed(evt);
            }
        });

        buttonGroup1.add(coachNameRdBtn);

        stuTxtField.setText("Enter Student Name...");

        buttonGroup1.add(stuNameRdBtn);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class ID", "Coach Name", "Student Name", "Date", "Start Time", "End Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        buttonGroup1.add(dateRdBtn);

        exportBtn.setBackground(new java.awt.Color(0, 0, 0));
        exportBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        exportBtn.setForeground(new java.awt.Color(255, 255, 255));
        exportBtn.setText("Export to Excel");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 52, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(382, 382, 382)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(214, 214, 214)
                                        .addComponent(classesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(212, 212, 212)))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(424, 424, 424)
                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(221, 221, 221)
                                .addComponent(coachNameRdBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(coachTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(stuNameRdBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stuTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(dateRdBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262)))
                .addComponent(jLabel2)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stuNameRdBtn)
                    .addComponent(stuTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateRdBtn)
                    .addComponent(coachNameRdBtn)
                    .addComponent(coachTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchBtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(exportBtn)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(classesBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        tblModel.setRowCount(0);
        String dbasename="";
        String dbaseid="";
        String dbasenames="";
        try
        {   
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:"+Utility.dbport+"/tennis",Utility.dbusername,Utility.dbpassword);
            if (coachNameRdBtn.isSelected()){
                String qry = "select employeeid from employee where fullname LIKE '%"+coachTxtField.getText()+"%'";
                PreparedStatement stm = con.prepareStatement(qry);
                ResultSet r = stm.executeQuery();
                if (r.next()){
                    dbaseid = r.getString("employeeid");
                }
                Statement st = con.createStatement();
                String sql="select * from class where employeeid LIKE '%"+dbaseid+"%'";
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()){
                    String classid = String.valueOf(rs.getInt("classid"));
                    String date = rs.getString("date");
                    String starttime = rs.getString("starttime");
                    String endtime = rs.getString("endtime");
                    String query = "select fullname from employee where employeeid LIKE '%"+rs.getInt("employeeid")+"%'";
                    PreparedStatement statement = con.prepareStatement(query);
                    ResultSet result = statement.executeQuery();
                    if (result.next()){
                    dbasename=result.getString("fullname").toString().trim();
                    String tbData[] = {classid, dbasename, "N/A", date, starttime, endtime};
                    tblModel.addRow(tbData);  
                }   
                }
            }
                if (stuNameRdBtn.isSelected()){
                String qry = "select studentid, fullname from student where fullname LIKE '%"+stuTxtField.getText()+"%'";
                PreparedStatement stm = con.prepareStatement(qry);
                ResultSet r = stm.executeQuery();
                if (r.next()){
                    dbaseid = r.getString("studentid");
                    dbasenames= r.getString("fullname");
                }
                Statement st = con.createStatement();
                String sql="select * from class_student where studentid LIKE '%"+dbaseid+"%'";
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()){
                    String classid = String.valueOf(rs.getInt("classid"));
                    Statement stat = con.createStatement();
                    String querystatement="select * from class where classid LIKE '%"+classid+"%'";
                    ResultSet res = stat.executeQuery(querystatement);
                        while(res.next()){
                            String date = res.getString("date");
                            String starttime = res.getString("starttime");
                            String endtime = res.getString("endtime");
                            String query = "select fullname from employee where employeeid LIKE '%"+res.getInt("employeeid")+"%'";
                            PreparedStatement statement = con.prepareStatement(query);
                            ResultSet result = statement.executeQuery();
                            if (result.next()){
                                dbasename=result.getString("fullname").toString().trim();
                                String tbData[] = {classid, dbasename, dbasenames, date, starttime, endtime};
                                tblModel.addRow(tbData);  
                                
                            }
                        }  
                }   
                }
                if (dateRdBtn.isSelected()){
                String dateString = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
                Statement st = con.createStatement();
                String sql="select * from class where date LIKE '%"+dateString+"%'";
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()){
                    String classid = String.valueOf(rs.getInt("classid"));
                    String date = rs.getString("date");
                    String starttime = rs.getString("starttime");
                    String endtime = rs.getString("endtime");
                    String query = "select fullname from employee where employeeid LIKE '%"+rs.getInt("employeeid")+"%'";
                    PreparedStatement statement = con.prepareStatement(query);
                    ResultSet result = statement.executeQuery();
                    if (result.next()){
                    dbasename=result.getString("fullname").toString().trim();
                    String tbData[] = {classid, dbasename, "N/A", date, starttime, endtime};
                    tblModel.addRow(tbData);  
                }   
                }
            }
        
            con.close();
        }
        catch(SQLException se){
             se.printStackTrace();
        }
        catch(Exception e){
            e.printStackTrace();     
        } 
    }//GEN-LAST:event_searchBtnActionPerformed

    private void classesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classesBtnActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        tblModel.setRowCount(0);
        String dbasename="";
        try
        {   
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:"+Utility.dbport+"/tennis",Utility.dbusername,Utility.dbpassword);
            Statement st = con.createStatement();
            String sql="select * from class";
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()){
                String classid = String.valueOf(rs.getInt("classid"));
                String date = rs.getString("date");
                String starttime = rs.getString("starttime");
                String endtime = rs.getString("endtime");
                String query = "select fullname from employee where employeeid LIKE '%"+rs.getInt("employeeid")+"%'";
                PreparedStatement statement = con.prepareStatement(query);
                ResultSet result = statement.executeQuery();
                if (result.next()){
                    dbasename=result.getString("fullname").toString().trim();
                    String tbData[] = {classid, dbasename, "N/A", date, starttime, endtime};
                    tblModel.addRow(tbData);  
                }   
            }
            
            
            con.close();
        }
        catch(SQLException se){
             se.printStackTrace();
        }
        catch(Exception e){
            e.printStackTrace();     
        } 
     
    }//GEN-LAST:event_classesBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
     new ViewStudentData().setVisible(true);
     this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void coachTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachTxtFieldActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
    FileOutputStream excelFOS = null;
    BufferedOutputStream excelBOS = null;
    XSSFWorkbook excelJTableExporter = null;

    //Choose Location For Saving Excel File
    JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\salga\\OneDrive\\Desktop");
    excelFileChooser.setDialogTitle("Save As...");
    //Only filters files with the following extensions    
    FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
    excelFileChooser.setFileFilter(fnef);
        
    int excelChooser = excelFileChooser.showSaveDialog(null);
        //Checks if the save button is clicked
        if (excelChooser == JFileChooser.APPROVE_OPTION){
            
        try {
            //From Apache POI libraries
            excelJTableExporter = new XSSFWorkbook();
            //Creates the excel sheet
            XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
            
            //obtaining the name of the columns on the JTable and adding them to the Excel sheet
            XSSFRow excelRow = excelSheet.createRow(0);
            for (int j = 0; j<jTable1.getColumnCount(); j++){
                XSSFCell excelCell = excelRow.createCell(j);
                excelCell.setCellValue(jTable1.getColumnName(j));
            }
            //Nested for-loop that sets the values for the Excel cells
            for (int i = 0; i<jTable1.getRowCount(); i++){
                excelRow = excelSheet.createRow(i+1);
                for (int j = 0; j<jTable1.getColumnCount(); j++){
                    XSSFCell excelCell = excelRow.createCell(j);
                    excelCell.setCellValue(jTable1.getValueAt(i, j).toString());
                }
            }
            //Append .xlsx file extension to the file
            excelFOS = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
            excelBOS = new BufferedOutputStream(excelFOS);
            excelJTableExporter.write(excelBOS);
            JOptionPane.showMessageDialog(null, "JTable Exported to Excel Successfully!");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ViewStudentClassesM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ViewStudentClassesM.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (excelBOS != null){
                    excelBOS.close();
                }
                if (excelFOS != null){
                    excelFOS.close();
                }
                if (excelJTableExporter != null){
                    excelJTableExporter.close();
                }
            } catch (IOException ex) {
                Logger.getLogger(ViewStudentClassesM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
        
        
    }//GEN-LAST:event_exportBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewStudentClassesM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewStudentClassesM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewStudentClassesM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewStudentClassesM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewStudentClassesM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton classesBtn;
    private javax.swing.JRadioButton coachNameRdBtn;
    private javax.swing.JTextField coachTxtField;
    private javax.swing.JRadioButton dateRdBtn;
    private javax.swing.JButton exportBtn;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JRadioButton stuNameRdBtn;
    private javax.swing.JTextField stuTxtField;
    // End of variables declaration//GEN-END:variables
}
