/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gladioustennisapp;

import com.mydia.cs.Utility;
import java.awt.Color;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author salga
 */
public class ViewStudentPayments extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public ViewStudentPayments() {
        initComponents();
        getContentPane().setBackground(new Color(220,20,60));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        paymentsBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameRdBtn = new javax.swing.JRadioButton();
        nameTxtField = new javax.swing.JTextField();
        amtTxtField = new javax.swing.JTextField();
        amtRdBtn = new javax.swing.JRadioButton();
        statusTxtField = new javax.swing.JTextField();
        statusRdBtn = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        exportBtn = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(220, 20, 60));
        setForeground(java.awt.Color.red);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gladioustennisapp/Webp.net-resizeimage (1).png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student Payment Data ");

        searchBtn.setBackground(new java.awt.Color(0, 0, 0));
        searchBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        paymentsBtn.setBackground(new java.awt.Color(0, 0, 0));
        paymentsBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        paymentsBtn.setForeground(new java.awt.Color(255, 255, 255));
        paymentsBtn.setText("Show all Payments");
        paymentsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentsBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search");

        buttonGroup1.add(nameRdBtn);
        nameRdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameRdBtnActionPerformed(evt);
            }
        });

        nameTxtField.setText("Enter Name...");

        amtTxtField.setText("Enter Payment Amount (>=)...");
        amtTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amtTxtFieldActionPerformed(evt);
            }
        });

        buttonGroup1.add(amtRdBtn);

        statusTxtField.setText("Enter Payment Status...");
        statusTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusTxtFieldActionPerformed(evt);
            }
        });

        buttonGroup1.add(statusRdBtn);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment ID", "Student Name", "Date", "Total Amount", "Paid?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        exportBtn.setBackground(new java.awt.Color(0, 0, 0));
        exportBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        exportBtn.setForeground(new java.awt.Color(255, 255, 255));
        exportBtn.setText("Export to Excel");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(214, 214, 214)
                                .addComponent(paymentsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exportBtn)
                                .addGap(69, 69, 69)))
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(nameRdBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(amtRdBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amtTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(statusRdBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(352, 352, 352)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(jLabel4))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(424, 424, 424)
                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(257, 257, 257)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameRdBtn)
                            .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amtRdBtn)
                            .addComponent(amtTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusRdBtn)
                            .addComponent(statusTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(searchBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(exportBtn)
                        .addGap(42, 42, 42)
                        .addComponent(paymentsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        tblModel.setRowCount(0);
        String paymentstatus="";
        String dbasename="";
        String dbaseid="";
        int paid=-1;
        try
        {   
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:"+Utility.dbport+"/tennis",Utility.dbusername,Utility.dbpassword);
            if (nameRdBtn.isSelected()){
                String qry = "select studentid from student where fullname LIKE '%"+nameTxtField.getText()+"%'";
                PreparedStatement stm = con.prepareStatement(qry);
                ResultSet r = stm.executeQuery();
                if (r.next()){
                    dbaseid = r.getString("studentid");
                }
                Statement st = con.createStatement();
                String sql="select * from payment where studentid LIKE '%"+dbaseid+"%'";
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()){
                    String paymentid = String.valueOf(rs.getInt("paymentid"));
                    String date = rs.getString("date");
                    String totalamount = String.valueOf(rs.getInt("totalamount"));
                    paid = rs.getInt("paid");
                    if (paid==0){
                        paymentstatus="No";
                    }
                    else {
                        paymentstatus="Yes";
                    }
                    String query = "select fullname from student where studentid LIKE '%"+rs.getInt("studentid")+"%'";
                    PreparedStatement statement = con.prepareStatement(query);
                    ResultSet result = statement.executeQuery();
                    if (result.next()){
                    dbasename=result.getString("fullname").toString().trim();
                    String tbData[] = {paymentid, dbasename, date, totalamount, paymentstatus};
                    tblModel.addRow(tbData);  
                }
                }
            }
                if (amtRdBtn.isSelected()){
                int amt = Integer.parseInt(amtTxtField.getText());
                Statement st = con.createStatement();
                String sql="select * from payment where totalamount >= '"+amt+"'";
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()){
                    String paymentid = String.valueOf(rs.getInt("paymentid"));
                    String date = rs.getString("date");
                    String totalamount = String.valueOf(rs.getInt("totalamount"));
                    paid = rs.getInt("paid");
                    if (paid==0){
                        paymentstatus="No";
                    }
                    else {
                        paymentstatus="Yes";
                    }
                    String query = "select fullname from student where studentid LIKE '%"+rs.getInt("studentid")+"%'";
                    PreparedStatement statement = con.prepareStatement(query);
                    ResultSet result = statement.executeQuery();
                    if (result.next()){
                        dbasename=result.getString("fullname").toString().trim();
                        String tbData[] = {paymentid, dbasename, date, totalamount, paymentstatus};
                        tblModel.addRow(tbData);  
                }    
                }
            }
                if (statusRdBtn.isSelected()){
                if (statusTxtField.getText().equals("Yes")){
                    paid=1;
                }
                else if (statusTxtField.getText().equals("No")){
                    paid=0;
                }
                Statement st = con.createStatement();
                String sql="select * from payment where paid LIKE '"+paid+"'";
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()){
                    String paymentid = String.valueOf(rs.getInt("paymentid"));
                    String date = rs.getString("date");
                    String totalamount = String.valueOf(rs.getInt("totalamount"));
                    String query = "select fullname from student where studentid LIKE '%"+rs.getInt("studentid")+"%'";
                    PreparedStatement statement = con.prepareStatement(query);
                    ResultSet result = statement.executeQuery();
                    paid = rs.getInt("paid");
                        if (paid==0){
                    paymentstatus="No";
                        }
                    else {
                        paymentstatus="Yes";
                    }
                    if (result.next()){
                        dbasename=result.getString("fullname").toString().trim();
                        String tbData[] = {paymentid, dbasename, date, totalamount, paymentstatus};
                        tblModel.addRow(tbData);  
                }    
                }
            }
            con.close();
        }
        catch(SQLException se){
             se.printStackTrace();
        }
        catch(Exception e){
            e.printStackTrace();     
        } 
    }//GEN-LAST:event_searchBtnActionPerformed

    private void paymentsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentsBtnActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        tblModel.setRowCount(0);
        String paymentstatus="";
        String dbasename="";
        try
        {   
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:"+Utility.dbport+"/tennis",Utility.dbusername,Utility.dbpassword);
            Statement st = con.createStatement();
            String sql="select * from payment";
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()){
                String paymentid = String.valueOf(rs.getInt("paymentid"));
                String studentid = String.valueOf(rs.getInt("studentid"));
                String date = rs.getString("date");
                String totalamount = String.valueOf(rs.getInt("totalamount"));
                int paid = rs.getInt("paid");
                if (paid==0){
                    paymentstatus="No";
                }
                else {
                    paymentstatus="Yes";
                }
                String query = "select fullname from student where studentid LIKE '%"+rs.getInt("studentid")+"%'";
                PreparedStatement statement = con.prepareStatement(query);
                ResultSet result = statement.executeQuery();
                if (result.next()){
                    dbasename=result.getString("fullname").toString().trim();
                    String tbData[] = {paymentid, dbasename, date, totalamount, paymentstatus};
                    tblModel.addRow(tbData);  
                }   
            }
            
            
            con.close();
        }
        catch(SQLException se){
             se.printStackTrace();
        }
        catch(Exception e){
            e.printStackTrace();     
        } 
     
    }//GEN-LAST:event_paymentsBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
     new ViewStudentData().setVisible(true);
     this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void amtTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amtTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amtTxtFieldActionPerformed

    private void nameRdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameRdBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameRdBtnActionPerformed

    private void statusTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusTxtFieldActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
    FileOutputStream excelFOS = null;
    BufferedOutputStream excelBOS = null;
    XSSFWorkbook excelJTableExporter = null;

    //Choose Location For Saving Excel File
    JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\salga\\OneDrive\\Desktop");
    excelFileChooser.setDialogTitle("Save As...");
    //Only filters files with the following extensions    
    FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
    excelFileChooser.setFileFilter(fnef);
        
    int excelChooser = excelFileChooser.showSaveDialog(null);
        //Checks if the save button is clicked
        if (excelChooser == JFileChooser.APPROVE_OPTION){
            
        try {
            //From Apache POI libraries
            excelJTableExporter = new XSSFWorkbook();
            XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
            
            XSSFRow excelRow = excelSheet.createRow(0);
            for (int j = 0; j<jTable2.getColumnCount(); j++){
                XSSFCell excelCell = excelRow.createCell(j);
                excelCell.setCellValue(jTable2.getColumnName(j));
            }

            for (int i = 0; i<jTable2.getRowCount(); i++){
                excelRow = excelSheet.createRow(i+1);
                for (int j = 0; j<jTable2.getColumnCount(); j++){
                    XSSFCell excelCell = excelRow.createCell(j);
                    excelCell.setCellValue(jTable2.getValueAt(i, j).toString());
                }
            }
            //Append .xlsx file extension to the file
            excelFOS = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
            excelBOS = new BufferedOutputStream(excelFOS);
            excelJTableExporter.write(excelBOS);
            JOptionPane.showMessageDialog(null, "JTable Exported to Excel Successfully!");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ViewStudentClassesM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ViewStudentClassesM.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (excelBOS != null){
                    excelBOS.close();
                }
                if (excelFOS != null){
                    excelFOS.close();
                }
                if (excelJTableExporter != null){
                    excelJTableExporter.close();
                }
            } catch (IOException ex) {
                Logger.getLogger(ViewStudentClassesM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
        
    }//GEN-LAST:event_exportBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewStudentPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewStudentPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewStudentPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewStudentPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewStudentPayments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton amtRdBtn;
    private javax.swing.JTextField amtTxtField;
    private javax.swing.JButton backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton exportBtn;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JRadioButton nameRdBtn;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JButton paymentsBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JRadioButton statusRdBtn;
    private javax.swing.JTextField statusTxtField;
    // End of variables declaration//GEN-END:variables
}
