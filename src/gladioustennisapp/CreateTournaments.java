/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gladioustennisapp;

import com.mydia.cs.Utility;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author salga
 */


public class CreateTournaments extends javax.swing.JFrame {
 
    /**
     * Creates new form Interface
     */
    public CreateTournaments() {
        
        int counter=0;
        initComponents();
        getContentPane().setBackground(new Color(220,20,60));
        jLabel5.setVisible(false);
        winnerCombo.setVisible(false);
        player1name.setText("");
        player2name.setText("");
        player3name.setText("");
        player4name.setText("");
        player5name.setText("");
        player6name.setText("");
        player7name.setText("");
        player8name.setText("");
        DefaultTableModel tblModel = (DefaultTableModel)playersTable.getModel();
                     try
                        {   
                        Class.forName("com.mysql.cj.jdbc.Driver"); 
                        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:"+Utility.dbport+"/tennis",Utility.dbusername,Utility.dbpassword); 
                        Statement st = con.createStatement();
                        String sql="select fullname from student";
                        ResultSet rs = st.executeQuery(sql);
                        while (rs.next()){
                            String fname = rs.getString("fullname");
                            playersNameCombo.addItem(fname);
                        }  
                        con.close();
                    }
                    catch(SQLException se){
                         se.printStackTrace();
                    }
                    catch(Exception e){
                        e.printStackTrace();     
                    } 

                     try
                        {   
                        Class.forName("com.mysql.cj.jdbc.Driver"); 
                        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:"+Utility.dbport+"/tennis",Utility.dbusername,Utility.dbpassword); 
                        Statement st = con.createStatement();
                        String sql="select fullname from employee";
                        ResultSet rs = st.executeQuery(sql);
                        while (rs.next()){
                            String fname = rs.getString("fullname");
                            coachNameCombo.addItem(fname);
                        }  
                        con.close();
                    }
                    catch(SQLException se){
                         se.printStackTrace();
                    }
                    catch(Exception e){
                        e.printStackTrace();     
                    } 
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        coachNameCombo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        typeCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        playersCombo = new javax.swing.JComboBox<>();
        winnerCombo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        playersTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        randomizeMatchupsBtn = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        playersNameCombo = new javax.swing.JComboBox<>();
        addPlayersBtn = new javax.swing.JButton();
        player1name = new javax.swing.JLabel();
        player2name = new javax.swing.JLabel();
        player3name = new javax.swing.JLabel();
        player4name = new javax.swing.JLabel();
        player5name = new javax.swing.JLabel();
        player6name = new javax.swing.JLabel();
        player7name = new javax.swing.JLabel();
        player8name = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        playersTable1 = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(220, 20, 60));
        setForeground(java.awt.Color.red);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gladioustennisapp/Webp.net-resizeimage (1).png"))); // NOI18N

        jLabel3.setText("Create Tournaments");
        jLabel3.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        backBtn.setText("Back");
        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jDateChooser2.setDateFormatString("yyyy-MM-dd");

        jLabel1.setText("Choose Date:");
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Tournament Type");
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Start Time:");
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Yes");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("No");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel12.setText("Completed?");
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Number of Players:");
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));

        addBtn.setText("Add");
        addBtn.setBackground(new java.awt.Color(0, 0, 0));
        addBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        typeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Knockout", "Round Robin" }));

        jLabel4.setText("Coach Name:");
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Winner:");
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));

        playersCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "8" }));
        playersCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playersComboActionPerformed(evt);
            }
        });

        jLabel14.setText("End Time:");
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));

        playersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        playersTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(playersTable);
        if (playersTable.getColumnModel().getColumnCount() > 0) {
            playersTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gladioustennisapp/8selim.png"))); // NOI18N

        randomizeMatchupsBtn.setText("Randomize Matchups");
        randomizeMatchupsBtn.setBackground(new java.awt.Color(0, 0, 0));
        randomizeMatchupsBtn.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        randomizeMatchupsBtn.setForeground(new java.awt.Color(255, 255, 255));
        randomizeMatchupsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomizeMatchupsBtnActionPerformed(evt);
            }
        });

        jSpinner1.setModel(new SpinnerDateModel());
        JSpinner.DateEditor timeEditor = new JSpinner.DateEditor(jSpinner1, "HH:mm:ss");
        jSpinner1.setEditor(timeEditor);
        jSpinner1.setValue(new Date());

        jSpinner2.setModel(new SpinnerDateModel());
        JSpinner.DateEditor timeEditor2 = new JSpinner.DateEditor(jSpinner2, "HH:mm:ss");
        jSpinner2.setEditor(timeEditor2);
        jSpinner2.setValue(new Date());

        addPlayersBtn.setText("Add");
        addPlayersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayersBtnActionPerformed(evt);
            }
        });

        player1name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player1name.setForeground(new java.awt.Color(255, 255, 255));
        player1name.setText("text");

        player2name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player2name.setForeground(new java.awt.Color(255, 255, 255));
        player2name.setText("text");

        player3name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player3name.setForeground(new java.awt.Color(255, 255, 255));
        player3name.setText("text");

        player4name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player4name.setForeground(new java.awt.Color(255, 255, 255));
        player4name.setText("text");

        player5name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player5name.setForeground(new java.awt.Color(255, 255, 255));
        player5name.setText("text");

        player6name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player6name.setForeground(new java.awt.Color(255, 255, 255));
        player6name.setText("text");

        player7name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player7name.setForeground(new java.awt.Color(255, 255, 255));
        player7name.setText("text");

        player8name.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        player8name.setForeground(new java.awt.Color(255, 255, 255));
        player8name.setText("text");

        playersTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        playersTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(playersTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(playersCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 47, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButton2)
                                        .addGap(6, 6, 6))
                                    .addComponent(jRadioButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(105, 105, 105))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(playersNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addPlayersBtn)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(coachNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(winnerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(player1name, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                    .addComponent(player2name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(player3name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(player4name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(player5name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(player6name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(player7name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(player8name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(randomizeMatchupsBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(addBtn))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 56, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(6, 6, 6))))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playersCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(jLabel12))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jRadioButton2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jLabel5)
                                    .addComponent(winnerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(coachNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(randomizeMatchupsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playersNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayersBtn)
                            .addComponent(player1name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(player2name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(player3name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(player4name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(player5name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(player6name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(player7name)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(player8name)))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        try {
            new CoachDashboard().setVisible(true);
        } catch (MessagingException ex) {
            Logger.getLogger(CreateTournaments.class.getName()).log(Level.SEVERE, null, ex);
        }
     this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
                Date a =jDateChooser2.getDate();
                if ((a==null)|| (!(jRadioButton1.isSelected()) && !(jRadioButton2.isSelected()))   )   
                {
                    JOptionPane.showMessageDialog(null, "Please fill in all the fields.");
                }
                else {
                String x = String.format("%1$tY-%1$tm-%1$td",a);
                int completed=-1;
                    SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
                    sdf.setTimeZone(TimeZone.getDefault());
                    String starttime= sdf.format(jSpinner1.getValue());
                    String endtime= sdf.format(jSpinner2.getValue());              
                try {
                    
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:"+Utility.dbport+"/tennis",Utility.dbusername,Utility.dbpassword);
                    String sql = "select * from employee where fullname LIKE '%"+coachNameCombo.getSelectedItem().toString()+"%'";
                    PreparedStatement stm = con.prepareStatement(sql);
                    ResultSet r = stm.executeQuery();
                    while (r.next()){
                        String employeeid= r.getString("employeeid");
                        
                                 if (jRadioButton2.isSelected()){
        
                                   completed=0;
                                

                                Date parsedstart = sdf.parse(starttime);
                                java.sql.Time sqlstart = new java.sql.Time(parsedstart.getTime());
                                Date parsedend = sdf.parse(endtime);
                                java.sql.Time sqlend = new java.sql.Time(parsedend.getTime());
                                String qry="insert into tournament (tournamenttype, completed, numberofplayers, date, starttime, endtime, employeeid) values('"+typeCombo.getSelectedItem().toString()+"', "+completed+", "+Integer.parseInt(playersCombo.getSelectedItem().toString())+", '"+x+"', '"+sqlstart+"', '"+sqlend+"', '"+employeeid+"')";
                                PreparedStatement st = con.prepareStatement(qry);
                                st.execute();
                                st.close();
                                JOptionPane.showMessageDialog(null, "The data has been added.");
                                     
                                 }
                    else{
                                completed=1;
                                String query = "select * from student where fullname LIKE '%"+winnerCombo.getSelectedItem().toString()+"%'";
                                PreparedStatement stat = con.prepareStatement(query);
                                ResultSet res = stat.executeQuery();
                                while (res.next()){
                                     String studentid= res.getString("studentid");
                                
                    
                                if (jRadioButton1.isSelected()){
                                   completed=1;
                                }
                                else if (jRadioButton2.isSelected()){
                                   completed=0;
                                }

                                Date parsedstart = sdf.parse(starttime);
                                java.sql.Time sqlstart = new java.sql.Time(parsedstart.getTime());
                                Date parsedend = sdf.parse(endtime);
                                java.sql.Time sqlend = new java.sql.Time(parsedend.getTime());
                                String qry="insert into tournament (tournamenttype, completed, numberofplayers, date, starttime, endtime, employeeid, winner_studentid) values('"+typeCombo.getSelectedItem().toString()+"', "+completed+", "+Integer.parseInt(playersCombo.getSelectedItem().toString())+", '"+x+"', '"+sqlstart+"', '"+sqlend+"', '"+employeeid+"', '"+studentid+"')";
                                PreparedStatement st = con.prepareStatement(qry);
                                st.execute();
                                st.close();
                                JOptionPane.showMessageDialog(null, "The data has been added.");
                    }
                          }
                                 
              } 
                }
              
              catch (SQLException ex) {
             Logger.getLogger(CreateTransactions.class.getName()).log(Level.SEVERE, null, ex);
             } catch (ClassNotFoundException ex) {
             Logger.getLogger(CreateTransactions.class.getName()).log(Level.SEVERE, null, ex);
              }     catch (ParseException ex) {
                        Logger.getLogger(CreateTournaments.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
                
    }//GEN-LAST:event_addBtnActionPerformed
    private static Random random = new Random();
    private int counter=0;
    private void randomizeMatchupsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomizeMatchupsBtnActionPerformed
         if ((playersCombo.getSelectedItem().equals("8"))){
            if (typeCombo.getSelectedItem().equals("Knockout"))
            {
        String player1 = playersTable.getModel().getValueAt(0, 0).toString();
        String player2 = playersTable.getModel().getValueAt(1, 0).toString();
        String player3 = playersTable.getModel().getValueAt(2, 0).toString();
        String player4 = playersTable.getModel().getValueAt(3, 0).toString();
        String player5 = playersTable.getModel().getValueAt(4, 0).toString();
        String player6 = playersTable.getModel().getValueAt(5, 0).toString();
        String player7 = playersTable.getModel().getValueAt(6, 0).toString();
        String player8 = playersTable.getModel().getValueAt(7, 0).toString();
        List<String> list = new ArrayList<>();
        list.add(player1);
        list.add(player2);
        list.add(player3);
        list.add(player4);
        list.add(player5);
        list.add(player6);
        list.add(player7);
        list.add(player8);
        while (list.size()>0)
        {
            counter++;
            int index = random.nextInt(list.size());
            String player = list.get(index);
            if (counter ==1){
            player1name.setText(player);
            }
            if (counter ==2){
            player2name.setText(player);
            }
            if (counter ==3){
            player3name.setText(player);
            }
            if (counter ==4){
            player4name.setText(player);
            }
            if (counter ==5){
            player5name.setText(player);
            }
            if (counter ==6){
            player6name.setText(player);
            }
            if (counter ==7){
            player7name.setText(player);
            }
            if (counter ==8){
            player8name.setText(player);
            }            
            list.remove(index);
        }
            }
            else if (typeCombo.getSelectedItem().equals("Round Robin")){
                    DefaultTableModel tblModel1 = (DefaultTableModel)playersTable1.getModel(); 
                    tblModel1.setRowCount(8);
                    tblModel1.setColumnCount(9);
                    String player1 = playersTable.getModel().getValueAt(0, 0).toString();
                    String player2 = playersTable.getModel().getValueAt(1, 0).toString();
                    String player3 = playersTable.getModel().getValueAt(2, 0).toString();
                    String player4 = playersTable.getModel().getValueAt(3, 0).toString();
                    String player5 = playersTable.getModel().getValueAt(4, 0).toString();
                    String player6 = playersTable.getModel().getValueAt(5, 0).toString();
                    String player7 = playersTable.getModel().getValueAt(6, 0).toString();
                    String player8 = playersTable.getModel().getValueAt(7, 0).toString();
                    playersTable1.getColumnModel().getColumn(0).setHeaderValue("");
                    playersTable1.getModel().setValueAt(player1, 0, 0);
                    playersTable1.getColumnModel().getColumn(1).setHeaderValue(player1);
                    playersTable1.getModel().setValueAt(player2, 1, 0);
                    playersTable1.getColumnModel().getColumn(2).setHeaderValue(player2);                    
                    playersTable1.getModel().setValueAt(player3, 2, 0);
                    playersTable1.getColumnModel().getColumn(3).setHeaderValue(player3);                  
                    playersTable1.getModel().setValueAt(player4, 3, 0);
                    playersTable1.getColumnModel().getColumn(4).setHeaderValue(player4);                    
                    playersTable1.getModel().setValueAt(player5, 4, 0);
                    playersTable1.getColumnModel().getColumn(5).setHeaderValue(player5);
                    playersTable1.getModel().setValueAt(player6, 5, 0);
                    playersTable1.getColumnModel().getColumn(6).setHeaderValue(player6);                    
                    playersTable1.getModel().setValueAt(player7, 6, 0);
                    playersTable1.getColumnModel().getColumn(7).setHeaderValue(player7);
                    playersTable1.getModel().setValueAt(player8, 7, 0);
                    playersTable1.getColumnModel().getColumn(8).setHeaderValue(player8);                    
            }
        
    }
    else if ((playersCombo.getSelectedItem().equals("4"))){
        if (typeCombo.getSelectedItem().equals("Knockout")){
        String player1 = playersTable.getModel().getValueAt(0, 0).toString();
        String player2 = playersTable.getModel().getValueAt(1, 0).toString();
        String player3 = playersTable.getModel().getValueAt(2, 0).toString();
        String player4 = playersTable.getModel().getValueAt(3, 0).toString();
        List<String> list = new ArrayList<>();
        list.add(player1);
        list.add(player2);
        list.add(player3);
        list.add(player4);
        while (list.size()>0){
            counter++;
            int index = random.nextInt(list.size());
            String player = list.get(index);
            if (counter ==1){
            player1name.setText(player);
            }
            if (counter ==2){
            player2name.setText(player);
            }
            if (counter ==3){
            player3name.setText(player);
            }
            if (counter ==4){
            player4name.setText(player);
            }
            list.remove(index);
        }
        player5name.setText("");
        player6name.setText("");
        player7name.setText("");
        player8name.setText("");
    }
        else if (typeCombo.getSelectedItem().equals("Round Robin")){
            DefaultTableModel tblModel1 = (DefaultTableModel)playersTable1.getModel(); 
                    tblModel1.setRowCount(4);
                    tblModel1.setColumnCount(5);
                    String player1 = playersTable.getModel().getValueAt(0, 0).toString();
                    String player2 = playersTable.getModel().getValueAt(1, 0).toString();
                    String player3 = playersTable.getModel().getValueAt(2, 0).toString();
                    String player4 = playersTable.getModel().getValueAt(3, 0).toString();
                    playersTable1.getColumnModel().getColumn(0).setHeaderValue("");
                    playersTable1.getModel().setValueAt(player1, 0, 0);
                    playersTable1.getColumnModel().getColumn(1).setHeaderValue(player1);
                    playersTable1.getModel().setValueAt(player2, 1, 0);
                    playersTable1.getColumnModel().getColumn(2).setHeaderValue(player2);                    
                    playersTable1.getModel().setValueAt(player3, 2, 0);
                    playersTable1.getColumnModel().getColumn(3).setHeaderValue(player3);                  
                    playersTable1.getModel().setValueAt(player4, 3, 0);
                    playersTable1.getColumnModel().getColumn(4).setHeaderValue(player4);                         
        }
    }
         
    }//GEN-LAST:event_randomizeMatchupsBtnActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jLabel5.setVisible(true);
        winnerCombo.setVisible(true);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jLabel5.setVisible(false);
        winnerCombo.setVisible(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void playersComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playersComboActionPerformed
    }//GEN-LAST:event_playersComboActionPerformed
    private int clicked=0;
    private void addPlayersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayersBtnActionPerformed
    clicked++;
    DefaultTableModel tblModel = (DefaultTableModel)playersTable.getModel();
    String name = playersNameCombo.getSelectedItem().toString();
    winnerCombo.addItem(name);
    String tbData[] = {name};
    tblModel.addRow(tbData);
    playersNameCombo.removeItem(playersNameCombo.getSelectedItem());
    if ((clicked==8) && (playersCombo.getSelectedItem().equals("8"))){
        addPlayersBtn.setVisible(false);
    }
    else if ((clicked==4) && (playersCombo.getSelectedItem().equals("4"))){
        addPlayersBtn.setVisible(false);
    }
    }//GEN-LAST:event_addPlayersBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateTournaments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateTournaments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateTournaments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateTournaments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateTournaments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton addPlayersBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> coachNameCombo;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JLabel player1name;
    private javax.swing.JLabel player2name;
    private javax.swing.JLabel player3name;
    private javax.swing.JLabel player4name;
    private javax.swing.JLabel player5name;
    private javax.swing.JLabel player6name;
    private javax.swing.JLabel player7name;
    private javax.swing.JLabel player8name;
    private javax.swing.JComboBox<String> playersCombo;
    private javax.swing.JComboBox<String> playersNameCombo;
    private javax.swing.JTable playersTable;
    private javax.swing.JTable playersTable1;
    private javax.swing.JButton randomizeMatchupsBtn;
    private javax.swing.JComboBox<String> typeCombo;
    private javax.swing.JComboBox<String> winnerCombo;
    // End of variables declaration//GEN-END:variables
}
